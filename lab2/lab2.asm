StkSeg SEGMENT PARA STACK 'STACK' ;PARA - выравние по параграфу (16 байт) т.е начало с адреса кратного 16 (пустые места заполняются NOP (no operation) грубо говоря 0)
DB 200h DUP (?) ; 200h = 512 байт (перевод из шестнадцатеричной), DUP - заполнить объём значением, (?) - заполнить тем, что было в памяти на момент запуска программы (можно указать число, тогда заполнится числами)
StkSeg ENDS
;
DataS SEGMENT WORD 'DATA' ; WORD - выравнивание по слову (2 байта). т.е начало с адреса кратного 2 (пустые места заполняются NOP (no operation) грубо говоря 0)
HelloMessage DB 13 ; DB - директива выделения памяти (байт)
DB 10
DB 'Hello, world !'
DB '$'  ; символ конца строки
DataS ENDS
;
Code SEGMENT WORD 'CODE'
ASSUME CS:Code, DS:DataS ; явное связывание сегмента CS скодом и DS с данными
DispMsg:
mov AX,DataS
mov DS,AX
mov CX,3 ; устанавливаем счётчик. 
L:       ; метка
mov DX,OFFSET HelloMessage ; здесь в DX попадёт 0 (передаём начало смещения)
mov AH,9
int 21h
loop L  ; команда перехода на метку, выполнится если cx != 0. механизм работы: отнимается 1 (от cx), если регистр не равен 0, то выполняется переход на метку
mov AH,7
int 21h
mov AH,4Ch  ; в качестве кода возврата из программы получим код символа, нажатого на клавиатуре (программа ожидает в конце нажатие)
int 21h
Code ENDS
END DispMsg
